import java.awt.Point;
import java.util.Arrays;

import sun.tools.tree.ThisExpression;

/**
 * Breve descrição do código
 *
 * @sid 2012
 * @aid 
 */
public class Poligono {

    private int lados;
    private Point[] vertices = new Point[lados];
    private Angulo[] declives;


    public Poligono(Point[] points) {
        this.lados = points.length;
        this.vertices = points;
        declives = new Angulo[lados];

        decliveLados();
//        System.out.println(Arrays.toString(this.vertices));
    }
    
    public void printAngulos() {
        for (Angulo angulo : declives) {
//            System.out.println(angulo.paraGraus());
        }
    }

    private void decliveLados() {
        for (int i = 0, k = this.lados-1; i < this.lados-1; i++, k++) {
            this.declives[i] = calcDeclive(this.vertices[i], this.vertices[i+1], this.vertices[k%this.lados]);
        }
        this.declives[this.lados-1] = calcDeclive(this.vertices[this.lados-1], this.vertices[0], this.vertices[2]);
    }
    
    
    private Angulo calcDeclive(Point a, Point b, Point c) {
//        System.out.println("a (" + a.x + ", " + a.y + ") b (" + b.x+", "+b.y+") c ("+c.x+", "+c.y+")");
        Angulo angulo1 = new Angulo(Math.abs(Math.atan2((double)a.y - b.y, (double)a.x - b.x)));
        Angulo angulo2 = new Angulo(Math.abs(Math.atan2((double)a.y - c.y, (double)a.x - c.x)));
        
        return angulo1.subtracao(angulo2);
    }
    
    public boolean temTodosLadosIguais() {
        int contador = 0;
        double dist = distancia(this.vertices[0], this.vertices[this.lados-1]);
        double dist3 = dist;
        for (int i = 0; i < this.lados-1; i++) {
            double dist2 = distancia(this.vertices[i], this.vertices[i+1]);
            if (dist2 == dist) {
                contador++;
            }
            dist = dist2;
        }
        if (dist == dist3) {
            contador++;
        }
        return contador == this.lados;
    }
    
    public boolean temTodosAngulosIguais() {
        int contador = 0;
        for (int i = 0; i < declives.length-1; i++) {
            System.out.println(this.declives[i].equals(this.declives[i+1]));
            if (this.declives[i] == this.declives[i+1]) {
                System.out.println(i);
                contador++;
            }
        }
        return contador == 3;
    }
    
    private double distancia(Point a, Point b) {
//        System.out.println("s " + a.x + " a " + a.y + " -- " + b.x + " .. " + b.y + " R " + Math.sqrt(Math.pow(Math.abs(a.x-b.x), 2) + Math.pow(Math.abs(a.y-b.y), 2)));
        return Math.sqrt(Math.pow(Math.abs(a.x-b.x), 2) + Math.pow(Math.abs(a.y-b.y), 2));
    }

}
